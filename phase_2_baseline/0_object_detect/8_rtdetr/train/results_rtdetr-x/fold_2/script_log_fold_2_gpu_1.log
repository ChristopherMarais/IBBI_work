2025-05-20 15:13:15 - Fold-2_GPU-1 - INFO - Initializing training for Fold 2 on GPU 1 with model rtdetr-x.pt.
2025-05-20 15:13:15 - Fold-2_GPU-1 - INFO - Data YAML: /blue/hulcr/gmarais/PhD/phase_1_data/2_object_detection_phase_2/ultralytics/cv_iteration_2/data.yaml
2025-05-20 15:13:15 - Fold-2_GPU-1 - INFO - Ultralytics project dir (base for this fold's runs): ./results_rtdetr-x/fold_2
2025-05-20 15:13:15 - Fold-2_GPU-1 - INFO - Ultralytics run name (specific training run): rtdetr-x_e3_b16_imgsz640
2025-05-20 15:13:15 - Fold-2_GPU-1 - INFO - Python-level stdout and stderr for this fold (for Ultralytics) are now redirected to: ./results_rtdetr-x/fold_2/ultralytics_output_fold_2_gpu_1.log
2025-05-20 15:13:18 - Fold-2_GPU-1 - INFO - Loaded base model rtdetr-x.pt using ultralytics.RTDETR class.
2025-05-20 15:13:18 - Fold-2_GPU-1 - INFO - Starting Ultralytics training with effective hyperparameters: {'epochs': 3, 'batch': 16, 'workers': 3, 'patience': 0, 'close_mosaic': 50, 'cache': False, 'imgsz': 640, 'optimizer': 'AdamW', 'lr0': 0.0001, 'lrf': 0.01, 'weight_decay': 0.0001, 'dropout': 0.0, 'pretrained': True, 'resume': False, 'hsv_h': 0.015, 'hsv_s': 0.7, 'hsv_v': 0.4, 'degrees': 0.0, 'translate': 0.1, 'scale': 0.5, 'shear': 0.0, 'perspective': 0.0, 'flipud': 0.5, 'fliplr': 0.5, 'mosaic': 1.0, 'mixup': 0.0, 'copy_paste': 0.0, 'end2end': True, 'save': True, 'save_period': 1, 'exist_ok': True, 'verbose': True, 'seed': 0, 'project': './results_rtdetr-x/fold_2', 'name': 'rtdetr-x_e3_b16_imgsz640', 'data': '/blue/hulcr/gmarais/PhD/phase_1_data/2_object_detection_phase_2/ultralytics/cv_iteration_2/data.yaml', 'device': '1'}
2025-05-20 15:13:18 - Fold-2_GPU-1 - ERROR - An error occurred during training for Fold-2_GPU-1: '[31m[1mend2end[0m' is not a valid YOLO argument. 

    Arguments received: ['yolo']. Ultralytics 'yolo' commands use the following syntax:

        yolo TASK MODE ARGS

        Where   TASK (optional) is one of frozenset({'segment', 'obb', 'detect', 'pose', 'classify'})
                MODE (required) is one of frozenset({'train', 'export', 'val', 'predict', 'track', 'benchmark'})
                ARGS (optional) are any number of custom 'arg=value' pairs like 'imgsz=320' that override defaults.
                    See all ARGS at https://docs.ultralytics.com/usage/cfg or with 'yolo cfg'

    1. Train a detection model for 10 epochs with an initial learning_rate of 0.01
        yolo train data=coco8.yaml model=yolo11n.pt epochs=10 lr0=0.01

    2. Predict a YouTube video using a pretrained segmentation model at image size 320:
        yolo predict model=yolo11n-seg.pt source='https://youtu.be/LNwODJXcvt4' imgsz=320

    3. Val a pretrained detection model at batch-size 1 and image size 640:
        yolo val model=yolo11n.pt data=coco8.yaml batch=1 imgsz=640

    4. Export a YOLO11n classification model to ONNX format at image size 224 by 128 (no TASK required)
        yolo export model=yolo11n-cls.pt format=onnx imgsz=224,128

    5. Ultralytics solutions usage
        yolo solutions count or in ['crop', 'blur', 'workout', 'heatmap', 'isegment', 'visioneye', 'speed', 'queue', 'analytics', 'inference', 'trackzone'] source="path/to/video.mp4"

    6. Run special commands:
        yolo help
        yolo checks
        yolo version
        yolo settings
        yolo copy-cfg
        yolo cfg
        yolo solutions help

    Docs: https://docs.ultralytics.com
    Solutions: https://docs.ultralytics.com/solutions/
    Community: https://community.ultralytics.com
    GitHub: https://github.com/ultralytics/ultralytics
    
Traceback (most recent call last):
  File "/blue/hulcr/gmarais/PhD/phase_2_baseline/0_object_detection/8_rtdetr/train/rtdetr_5fold.py", line 179, in train_single_fold
    results = model.train(**current_train_params)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/hulcr/gmarais/conda/envs/EEL/lib/python3.11/site-packages/ultralytics/engine/model.py", line 787, in train
    self.trainer = (trainer or self._smart_load("trainer"))(overrides=args, _callbacks=self.callbacks)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/hulcr/gmarais/conda/envs/EEL/lib/python3.11/site-packages/ultralytics/engine/trainer.py", line 103, in __init__
    self.args = get_cfg(cfg, overrides)
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/hulcr/gmarais/conda/envs/EEL/lib/python3.11/site-packages/ultralytics/cfg/__init__.py", line 306, in get_cfg
    check_dict_alignment(cfg, overrides)
  File "/blue/hulcr/gmarais/conda/envs/EEL/lib/python3.11/site-packages/ultralytics/cfg/__init__.py", line 496, in check_dict_alignment
    raise SyntaxError(string + CLI_HELP_MSG) from e
SyntaxError: '[31m[1mend2end[0m' is not a valid YOLO argument. 

    Arguments received: ['yolo']. Ultralytics 'yolo' commands use the following syntax:

        yolo TASK MODE ARGS

        Where   TASK (optional) is one of frozenset({'segment', 'obb', 'detect', 'pose', 'classify'})
                MODE (required) is one of frozenset({'train', 'export', 'val', 'predict', 'track', 'benchmark'})
                ARGS (optional) are any number of custom 'arg=value' pairs like 'imgsz=320' that override defaults.
                    See all ARGS at https://docs.ultralytics.com/usage/cfg or with 'yolo cfg'

    1. Train a detection model for 10 epochs with an initial learning_rate of 0.01
        yolo train data=coco8.yaml model=yolo11n.pt epochs=10 lr0=0.01

    2. Predict a YouTube video using a pretrained segmentation model at image size 320:
        yolo predict model=yolo11n-seg.pt source='https://youtu.be/LNwODJXcvt4' imgsz=320

    3. Val a pretrained detection model at batch-size 1 and image size 640:
        yolo val model=yolo11n.pt data=coco8.yaml batch=1 imgsz=640

    4. Export a YOLO11n classification model to ONNX format at image size 224 by 128 (no TASK required)
        yolo export model=yolo11n-cls.pt format=onnx imgsz=224,128

    5. Ultralytics solutions usage
        yolo solutions count or in ['crop', 'blur', 'workout', 'heatmap', 'isegment', 'visioneye', 'speed', 'queue', 'analytics', 'inference', 'trackzone'] source="path/to/video.mp4"

    6. Run special commands:
        yolo help
        yolo checks
        yolo version
        yolo settings
        yolo copy-cfg
        yolo cfg
        yolo solutions help

    Docs: https://docs.ultralytics.com
    Solutions: https://docs.ultralytics.com/solutions/
    Community: https://community.ultralytics.com
    GitHub: https://github.com/ultralytics/ultralytics
    
2025-05-20 15:13:18 - Fold-2_GPU-1 - INFO - Restored stdout/stderr for this fold process.
